name: Build Kafka API Docker Image

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  # Additional variables can be created using the format below.
  # The info available to the push event can be found here: 
  # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads
  # Push build action
  GITHUB_REPO: ${{ github.event.repository.name }}
  GITHUB_PUSHER_NAME: ${{ github.event.pusher.name }}
  GITHUB_PUSHER_EMAIL: ${{ github.event.pusher.email }}
  GITHUB_HEAD_COMMIT: ${{ github.event.head_commit.url}}
  GITHUB_MESG: ${{ github.event.head_commit.message }}
  GITHUB_COMPARE: ${{ github.event.compare }}
  GITHUB_VERSION: ${{ github.event.compare }}
  
jobs:
  dockerbuild:
    name: DockerBuild
    runs-on: ubuntu-latest
    
    # Make outputs SHORT_SHA available to next bump job
    outputs:
      short_sha: ${{ steps.getbuildversion.outputs.buildversion }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package --file kafka/pom.xml

    - name: List Built Generated Components
      run: |-
        pwd && ls -lrt && ls -lrt kafka/target

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Create image tag
    - name: Add SHORT_SHA env property with HEAD
      id: getbuildversion
      run: echo "::set-output name=buildversion::$(echo api-${GITHUB_SHA::4})"
      
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./kafka
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/kafka-api:${{ steps.getbuildversion.outputs.buildversion }}
        cache-from: ${{ secrets.DOCKERHUB_USERNAME }}/kafka
        cache-to: ${{ secrets.DOCKERHUB_USERNAME }}/kafka


  deploy-sit:
    name: Deploy-SIT
    runs-on: ubuntu-latest
    environment: 'sit'
    needs: dockerbuild

    steps:   
      - name: Check out code
        uses: actions/checkout@v3
        with:
          repository: CO-OPBANK/deployments
          ref: master
          fetch-depth: 0
          token: ${{ secrets.MY_GIT_TOKEN }}
          
      - name: Version Image to Current Deployment
        run: |-
          pwd && ls -lrt
          cd test/kafka
          pwd && ls -lrt
          currentimage=$(cat deployment.yaml | grep image: | awk -F ':' '{print $NF}')
          echo print currentimage $currentimage
          echo print newimage ${{ needs.dockerbuild.outputs.short_sha }}
          sed -i 's#'"$currentimage"'#'"${{ needs.dockerbuild.outputs.short_sha }}"'#g' deployment.yaml
          cat deployment.yaml | grep image:
          
      - name: Commit files
        run: |
          git config --local user.email ${{github.event.pusher.email}}
          git config --local user.name ${{ github.event.pusher.name }}
          git add .
          git commit -a -m "updated image version to : ${{ needs.dockerbuild.outputs.short_sha }}: Message: ${{ github.event.head_commit.message }}:Repo:${{ github.event.head_commit.url}}"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: CO-OPBANK/deployments
          branch: master
          github_token: ${{ secrets.MY_GIT_TOKEN }}
    
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #  - name: Update dependency graph
    #    uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
